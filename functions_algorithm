def prime(x):  #素数探索
    if x < 2:  # 2より小さい数値は素数ではない
        print("No")
    for i in range(2, int(x ** 0.5) + 1):
        if x % i == 0:
            print("No")
    print("Yes")

def binary_search(arr, target):  #二分探索法
  left, right = 0, len(arr) - 1
  while left <= right:
    mid = (left + right) // 2
    if arr[mid] == target:
        return mid
    elif arr[mid] < target:
        left = mid + 1
    elif arr[mid] < target:
        right = mid - 1
  return -1

def bubble(A):  #バブルソート
    for i in range(len(A) - 1):
        for j in range(len(A)-1-i):
            if A[j] > A[j+1]:
                A[j], A[j+1] = A[j+1], A[j]
    return A

def fib(n):  #フィボナッチ数列（nまで空白区切りで出力）
    a, b = 0, 1
    print(a, b, end=" ")
    
    while a + b < n:
      a, b = b, a + b
      print(b, end=" ")

def prefix_sum(li, L, R):  #累積和
    B = [0] * (len(li) + 1)
    for i in range(len(li)):
        B[i + 1] = B[i] + li[i]
    return B[R] - B[L - 1]
